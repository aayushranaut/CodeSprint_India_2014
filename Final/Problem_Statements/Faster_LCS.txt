A subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. Longest common subsequence (LCS) of 2 sequences is a subsequence, with maximal length, which is common to both the sequences. 

Given two sequence of integers, A=[a1,a2,…,an] and B=[b1,b2,…,bm], find any longest common subsequence, whose length doesn't exceed 500. That is:

If length of LCS doesn't exceed 500, then print it.
If length of LCS exceeds 500, then print any subsequence whose length is 500.
In case multiple solution exists, print any of them. It is guaranteed that at least one non-empty common subsequence will exist.

Input Format 
First line contains two space separated integers, n and m, where n is the size of sequence A, while m is size of sequence B. In next line there are n space separated integers representing sequence A, and in third line there are m space separated integers representing sequence B.

n m
A1 A2 … An 
B1 B2 … Bm  
Output Format 
Print the longest common subsequence, with length no greater than 500, and each element should be separated by at least one white-space. In case of multiple answers, print any one of them.

Constraints 
1≤n≤105 
1≤m≤105 
0≤ai<109,where i∈[1,n] 
0≤bj<109,where j∈[1,m]

Sample Input

5 6
1 2 3 4 1
3 4 1 2 1 3
Sample Output

1 2 3
Explanation

There is no common subsequence with length larger than 3. And "1 2 3", "1 2 1", "3 4 1" are all correct answers.